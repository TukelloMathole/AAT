@inject IJSRuntime js

<div class="container mt-2">
    <ul class="nav nav-pills mb-2 flex space-x-2" id="pills-tab" role="tablist">
        <li class="nav-item" role="presentation">
            <NavLink class="nav-link active custom-nav-link px-1 py-0.5 text-xs" href="" Match="NavLinkMatch.All" aria-controls="pills-home" aria-selected="false">
                <span class="bi bi-list-nested text-base" aria-hidden="true"></span> Home
            </NavLink>
        </li>
        <li class="nav-item" role="presentation">
            <NavLink class="nav-link custom-nav-link px-1 py-0.5 text-xs" href="events" aria-controls="pills-events" aria-selected="false">
                <span class="bi bi-list-nested text-base" aria-hidden="true"></span> Events
            </NavLink>
        </li>
        @if (!isLoggedIn)
        {
            <li class="nav-item" role="presentation">
                <NavLink class="nav-link custom-nav-link px-1 py-0.5 text-xs" href="LogIn" aria-controls="pills-login" aria-selected="false">
                    <span class="bi bi-person text-base" aria-hidden="true"></span> LogIn
                </NavLink>
            </li>
        }
    </ul>
</div>

@code {
    private bool isLoggedIn;

    protected override async Task OnInitializedAsync()
    {
        // Check local storage to see if the user is logged in
        var token = await js.InvokeAsync<string>("localStorage.getItem", "authToken");
        isLoggedIn = !string.IsNullOrEmpty(token);
    }
}
